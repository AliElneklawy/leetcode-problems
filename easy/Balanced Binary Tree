# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        if root is None:
            return True

        l_height = self.h(root.left)
        r_height = self.h(root.right)

        if abs(l_height - r_height) > 1:
            return False
        
        return self.isBalanced(root.left) and self.isBalanced(root.right)

    def h(self, root):
        if root is None:
            return 0
        return (1 + max(self.h(root.left), self.h(root.right)))
