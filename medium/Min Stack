class MinStack:

    def __init__(self):
        self.s = []
        self.topElem = -1
        self.mins = []
        

    def push(self, val: int) -> None:
        self.s += [val]
        self.topElem += 1
        if not self.mins or val <= self.mins[-1]:
            self.mins.append(val) 
                

    def pop(self) -> None:
        self.topElem -= 1
        elem = self.s.pop()
        if elem == self.mins[-1]:
            self.mins.pop()


    def top(self) -> int:
        return self.s[self.topElem]
        

    def getMin(self) -> int:
        return self.mins[-1]
